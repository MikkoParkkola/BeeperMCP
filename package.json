{
  "name": "beeper-mcp",
  "version": "1.6.1",
  "releaseDate": "2025-08-28",
  "type": "module",
  "engines": {
    "node": ">=22"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/MikkoParkkola/BeeperMCP.git"
  },
  "scripts": {
    "build": "tsc -p tsconfig.json && cp mcp-tools.js utils.js dist/",
    "build:pkg-entry": "esbuild dist/src/bin.js --bundle --platform=node --format=cjs --external:@matrix-org/olm --external:@matrix-org/matrix-sdk-crypto-nodejs --outfile=build/pkg-entry.cjs",
    "build:sea-entry": "mkdir -p build && node -e \"require('fs').writeFileSync('build/sea-entry.cjs', '(async () => { await import(\\'./dist/src/bin.js\\'); })();')\"",
    "lint": "eslint .",
    "format": "prettier --check .",
    "start": "node dist/beeper-mcp-server.js",
    "chat": "node dist/src/cli/chat.js",
    "pack:pkg": "pkg -t node22-macos-arm64 --compress Brotli --output build/beepermcp dist/src/bin.js",
    "make:macos": "npm run build && npm run build:pkg-entry && PKG_CACHE_PATH=.pkg-cache npx -y pkg -t node18-macos-arm64 --compress Brotli --output build/beepermcp build/pkg-entry.cjs && (cp -X build/beepermcp build/beepermcp.run || cp build/beepermcp build/beepermcp.run) && xattr -c build/beepermcp.run || true && codesign --force --sign - --timestamp=none build/beepermcp.run && codesign --verify --verbose build/beepermcp.run && echo 'Built: build/beepermcp.run' && file build/beepermcp.run && ls -lh build/beepermcp.run",
    "make:macos:sea": "npm run build && npm run build:sea-entry && node -e \"require('fs').writeFileSync('sea-config.json', JSON.stringify({main:'./build/sea-entry.cjs', output:'sea-prep.blob', disableExperimentalSEAWarning:true}, null, 2))\" && node --experimental-sea-config sea-config.json && (cp $(command -v node) build/beepermcp.sea || cp $(which node) build/beepermcp.sea) && npx -y postject build/beepermcp.sea NODE_SEA_BLOB sea-prep.blob --sentinel-fuse NODE_SEA_FUSE_fce680ab2cc467b6e072b8b5df1996b2 && (cp -X build/beepermcp.sea build/beepermcp.sea.run || cp build/beepermcp.sea build/beepermcp.sea.run) && xattr -c build/beepermcp.sea.run || true && codesign --force --sign - --timestamp=none build/beepermcp.sea.run && codesign --verify --verbose build/beepermcp.sea.run && echo 'Built: build/beepermcp.sea.run' && file build/beepermcp.sea.run && ls -lh build/beepermcp.sea.run",
    
    "make:linux:sea": "npm run build && npm run build:sea-entry && node -e \"require('fs').writeFileSync('sea-config.json', JSON.stringify({main:'./build/sea-entry.cjs', output:'sea-prep.blob', disableExperimentalSEAWarning:true}, null, 2))\" && node --experimental-sea-config sea-config.json && node -e \"const fs=require('fs');fs.copyFileSync(process.execPath,'build/beepermcp.sea');\" && npx -y postject build/beepermcp.sea NODE_SEA_BLOB sea-prep.blob --sentinel-fuse NODE_SEA_FUSE_fce680ab2cc467b6e072b8b5df1996b2 && cp build/beepermcp.sea build/beepermcp.sea.run && chmod +x build/beepermcp.sea.run && echo 'Built: build/beepermcp.sea.run' && file build/beepermcp.sea.run && ls -lh build/beepermcp.sea.run",
    "make:windows:sea": "npm run build && npm run build:sea-entry && node -e \"require('fs').writeFileSync('sea-config.json', JSON.stringify({main:'./build/sea-entry.cjs', output:'sea-prep.blob', disableExperimentalSEAWarning:true}, null, 2))\" && node --experimental-sea-config sea-config.json && node -e \"const fs=require('fs');fs.copyFileSync(process.execPath,'build/\\\\beepermcp.sea.exe');\" && npx -y postject build/\\\\beepermcp.sea.exe NODE_SEA_BLOB sea-prep.blob --sentinel-fuse NODE_SEA_FUSE_fce680ab2cc467b6e072b8b5df1996b2 && node -e \"const fs=require('fs');fs.copyFileSync('build/\\\\beepermcp.sea.exe','build/\\\\beepermcp.sea.run.exe');\" && echo Built: build\\beepermcp.sea.run.exe",
    "pack:all": "pkg -t node22-macos-x64,node22-macos-arm64,node22-linux-x64,node22-win-x64 --compress Brotli --output build/beepermcp dist/src/bin.js",
    "test": "npm run build && node --test test/*.test.js",
    "test:coverage": "npm run build && c8 --reporter=text --reporter=lcov --report-dir=coverage --check-coverage --lines 80 --branches 80 --functions 80 --exclude setup.js --exclude 'dist/**' node --test test/*.test.js",
    "build:docker": "bash scripts/build_docker.sh",
    "prepare": "husky"
  },
  "bin": {
    "beepermcp": "dist/src/bin.js"
  },
  "pkg": {
    "assets": [
      "node_modules/@matrix-org/olm/**/*",
      "node_modules/@matrix-org/matrix-sdk-crypto-nodejs/**/*"
    ],
    "scripts": [
      "dist/**/*.js"
    ]
  },
  "devDependencies": {
    "@eslint/js": "^9.33.0",
    "@types/better-sqlite3": "^7.6.10",
    "@types/json-schema": "^7.0.15",
    "@types/luxon": "^3.7.1",
    "@types/node": "^22.5.2",
    "@types/pg": "^8.15.5",
    "@typescript-eslint/eslint-plugin": "^8.39.1",
    "@typescript-eslint/parser": "^8.39.1",
    "ajv": "^8.17.1",
    "c8": "^10.1.3",
    "esbuild": "^0.20.2",
    "eslint": "^9.33.0",
    "globals": "^16.3.0",
    "husky": "^9.0.0",
    "postject": "^1.0.0-alpha.6",
    "pg-mem": "^3.0.5",
    "pkg": "^5.8.1",
    "prettier": "^3.2.5",
    "typescript": "^5.9.2"
  },
  "dependencies": {
    "blessed": "^0.1.81",
    "@matrix-org/matrix-sdk-crypto-nodejs": "0.4.0-beta.1",
    "@matrix-org/olm": "^3.2.15",
    "@modelcontextprotocol/sdk": "^1.17.3",
    "better-sqlite3": "^12.2.0",
    "dotenv": "^16.4.5",
    "luxon": "^3.7.1",
    "matrix-js-sdk": "^37.13.0",
    "pg": "^8.12.0",
    "pino": "^9.4.0",
    "zod": "^3.23.8"
  }
}
