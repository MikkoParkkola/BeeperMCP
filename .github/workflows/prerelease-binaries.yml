name: prerelease-binaries

on:
  push:
    branches: [main]

jobs:
  build:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
      - name: Install dependencies
        run: npm ci
      - name: Build dist
        run: npm run build
      - name: Package binaries (bundle with esbuild; pkg node18 targets)
        run: |
          set -euo pipefail
          # Bundle ESM entry to CommonJS for pkg
          npx esbuild@0.20.2 dist/src/bin.js \
            --bundle --platform=node --format=cjs \
            --external:@matrix-org/olm \
            --external:@matrix-org/matrix-sdk-crypto-nodejs \
            --external:better-sqlite3 \
            --outfile=build/pkg-entry.cjs
          # Package with pkg using node18 runtimes (pkg does not support node22 tags)
          TARGETS="node18-macos-x64,node18-linux-x64,node18-win-x64"
          if [ "${{ vars.ENABLE_MACOS_ARM64 || '' }}" = "true" ]; then
            TARGETS="$TARGETS,node18-macos-arm64"
          fi
          echo "Using pkg targets: $TARGETS"
          PKG_CACHE_PATH="$PWD/.pkg-cache" npx pkg -t "$TARGETS" --compress Brotli --output build/beepermcp build/pkg-entry.cjs
          ls -l build || true
      - name: Prepare artifacts with checksums and manifest (foldered, renamed)
        id: prep
        run: |
          mkdir -p artifacts/macos/x64 artifacts/macos/arm64 artifacts/linux/x64 artifacts/windows/x64
          mv build/beepermcp-macos-x64 artifacts/macos/x64/agentsmcp
          if [ -f build/beepermcp-macos-arm64 ]; then mv build/beepermcp-macos-arm64 artifacts/macos/arm64/agentsmcp; fi
          mv build/beepermcp-linux-x64 artifacts/linux/x64/agentsmcp
          mv build/beepermcp-win-x64.exe artifacts/windows/x64/agentsmcp.exe || true
          chmod +x artifacts/macos/x64/agentsmcp || true
          chmod +x artifacts/macos/arm64/agentsmcp || true
          chmod +x artifacts/linux/x64/agentsmcp || true
          cd artifacts
          tar -czf agentsmcp-macos-x64.tar.gz -C macos/x64 agentsmcp
          if [ -f macos/arm64/agentsmcp ]; then tar -czf agentsmcp-macos-arm64.tar.gz -C macos/arm64 agentsmcp; fi
          tar -czf agentsmcp-linux-x64.tar.gz -C linux/x64 agentsmcp
          (cd windows/x64 && zip -q ../../agentsmcp-windows-x64.zip agentsmcp.exe) || true
          sha256sum agentsmcp-*.*z* > checksums.txt || shasum -a 256 agentsmcp-*.*z* > checksums.txt
          node -e '
            const fs=require("fs");
            const cp=(n)=>fs.existsSync(n)?fs.statSync(n).size:0;
            const txt=fs.readFileSync("checksums.txt","utf8");
            const getSha=(n)=> (txt.split(/\n/).find(l=>l.includes(n))||"").split(/[\n]+/)[0];
            const assets=[
              {name:"agentsmcp-macos-x64.tar.gz", platform:"macos-x64"},
              {name:"agentsmcp-macos-arm64.tar.gz", platform:"macos-arm64"},
              {name:"agentsmcp-linux-x64.tar.gz", platform:"linux-x64"},
              {name:"agentsmcp-windows-x64.zip", platform:"win-x64"}
            ].filter(a=>fs.existsSync(a.name)).map(a=>({name:a.name, platform:a.platform, size:cp(a.name), sha256:getSha(a.name)}));
            const manifest={version: process.env.GITHUB_SHA?.slice(0,7) || "dev", assets};
            fs.writeFileSync("manifest.json", JSON.stringify(manifest,null,2));
          '
          cd -
      - name: Sign manifest (optional ed25519 JSON signature)
        if: ${{ secrets.MANIFEST_PRIVKEY_B64 != '' }}
        run: |
          cd artifacts
          node -e '
            const fs=require("fs");
            const crypto=require("crypto");
            const b64=process.env.MANIFEST_PRIVKEY_B64||"";
            if(!b64) process.exit(0);
            const key=crypto.createPrivateKey({key:Buffer.from(b64,"base64"), format:"der", type:"pkcs8"});
            const data=fs.readFileSync("manifest.json");
            const sig=crypto.sign(null, data, key).toString("base64");
            const out={alg:"ed25519", sig};
            fs.writeFileSync("manifest.sig", JSON.stringify(out));
          '
          cd -
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: beepermcp-prerelease
          path: |
            artifacts/agentsmcp-macos-x64.tar.gz
            artifacts/agentsmcp-macos-arm64.tar.gz
            artifacts/agentsmcp-linux-x64.tar.gz
            artifacts/agentsmcp-windows-x64.zip
            artifacts/checksums.txt
            artifacts/manifest.json
            artifacts/manifest.sig
      - name: Create prerelease
        uses: softprops/action-gh-release@v2
        with:
          tag_name: prerelease-${{ github.sha }}
          prerelease: true
          files: |
            artifacts/agentsmcp-macos-x64.tar.gz
            artifacts/agentsmcp-macos-arm64.tar.gz
            artifacts/agentsmcp-linux-x64.tar.gz
            artifacts/agentsmcp-windows-x64.zip
            artifacts/checksums.txt
            artifacts/manifest.json
            artifacts/manifest.sig
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
